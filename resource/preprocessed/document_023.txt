SyntaxError: JSON.parse: bad parsing - JavaScript | MDNSkip to main contentSkip to searchSkip to select languageTechnologiesTechnologies OverviewHTMLCSSJavaScriptGraphicsHTTPAPIsBrowser ExtensionsMathMLReferences & GuidesLearn web developmentTutorialsReferencesDeveloper GuidesAccessibilityGame development...more docsFeedbackSend FeedbackContribute to MDNReport a content issue 🌐Report a platform issue 🌐Search MDNWeb technology for developersJavaScriptJavaScript referenceJavaScript error referenceSyntaxError: JSON.parse: bad parsingChange languageTable of contentsTable of contentsMessageError typeWhat went wrong?ExamplesSee alsoSyntaxError: JSON.parse: bad parsing
The JavaScript exceptions thrown by JSON.parse() occur when string failed
to be parsed as JSON.MessageSyntaxError: JSON.parse: unterminated string literal
SyntaxError: JSON.parse: bad control character in string literal
SyntaxError: JSON.parse: bad character in string literal
SyntaxError: JSON.parse: bad Unicode escape
SyntaxError: JSON.parse: bad escape character
SyntaxError: JSON.parse: unterminated string
SyntaxError: JSON.parse: no number after minus sign
SyntaxError: JSON.parse: unexpected non-digit
SyntaxError: JSON.parse: missing digits after decimal point
SyntaxError: JSON.parse: unterminated fractional number
SyntaxError: JSON.parse: missing digits after exponent indicator
SyntaxError: JSON.parse: missing digits after exponent sign
SyntaxError: JSON.parse: exponent part is missing a number
SyntaxError: JSON.parse: unexpected end of data
SyntaxError: JSON.parse: unexpected keyword
SyntaxError: JSON.parse: unexpected character
SyntaxError: JSON.parse: end of data while reading object contents
SyntaxError: JSON.parse: expected property name or '}'
SyntaxError: JSON.parse: end of data when ',' or ']' was expected
SyntaxError: JSON.parse: expected ',' or ']' after array element
SyntaxError: JSON.parse: end of data when property name was expected
SyntaxError: JSON.parse: expected double-quoted property name
SyntaxError: JSON.parse: end of data after property name when ':' was expected
SyntaxError: JSON.parse: expected ':' after property name in object
SyntaxError: JSON.parse: end of data after property value in object
SyntaxError: JSON.parse: expected ',' or '}' after property value in object
SyntaxError: JSON.parse: expected ',' or '}' after property-value pair in object literal
SyntaxError: JSON.parse: property names must be double-quoted strings
SyntaxError: JSON.parse: expected property name or '}'
SyntaxError: JSON.parse: unexpected character
SyntaxError: JSON.parse: unexpected non-whitespace character after JSON data
SyntaxError: JSON.parse Error: Invalid character at position {0} (Edge)Error typeSyntaxErrorWhat went wrong?JSON.parse() parses a string as JSON. This string has to be valid JSON
and will throw this error if incorrect syntax was encountered.ExamplesJSON.parse() does not
allow trailing commasBoth lines will throw a SyntaxError:
JSON.parse('[1, 2, 3, 4,]');
JSON.parse('{"foo": 1,}');
// SyntaxError JSON.parse: unexpected character
// at line 1 column 14 of the JSON data
Omit the trailing commas to parse the JSON correctly:
JSON.parse('[1, 2, 3, 4]');
JSON.parse('{"foo": 1}');Property names must be double-quoted
stringsYou cannot use single-quotes around properties, like 'foo'.
JSON.parse("{'foo': 1}");
// SyntaxError: JSON.parse: expected property name or '}'
// at line 1 column 2 of the JSON data
Instead write "foo":
JSON.parse('{"foo": 1}');Leading zeros and decimal pointsYou cannot use leading zeros, like 01, and decimal points must be followed by at least
one digit.
JSON.parse('{"foo": 01}');
// SyntaxError: JSON.parse: expected ',' or '}' after property value
// in object at line 1 column 2 of the JSON data
JSON.parse('{"foo": 1.}');
// SyntaxError: JSON.parse: unterminated fractional number
// at line 1 column 2 of the JSON data
Instead write just 1 without a zero and use at least one digit after a decimal point:
JSON.parse('{"foo": 1}');
JSON.parse('{"foo": 1.0}');
See also
JSON
JSON.parse()
JSON.stringify()
Found a problem with this page?Source on GitHubReport a problem with this content on GitHubWant to fix the problem yourself? See our Contribution guide.Last modified: Feb 19, 2021, by MDN contributorsChange your languageSelect your preferred language English (US)DeutschFrançais日本語한국어PolskiPortuguês (do Brasil)Русский中文 (简体) Change languageRelated Topics
JavaScript
Tutorials:
Complete beginners
JavaScript basics
JavaScript first steps
JavaScript building blocks
Introducing JavaScript objects
JavaScript Guide
Introduction
Grammar and types
Control flow and error handling
Loops and iteration
Functions
Expressions and operators
Numbers and dates
Text formatting
Regular expressions
Indexed collections
Keyed collections
Working with objects
Details of the object model
Using promises
Iterators and generators
Meta programming
JavaScript modules
Intermediate
Client-side JavaScript frameworks
Client-side web APIs
A re-introduction to JavaScript
JavaScript data structures
Equality comparisons and sameness
Closures
Advanced
Inheritance and the prototype chain
Strict mode
JavaScript typed arrays
Memory Management
Concurrency model and Event Loop
References:
Built-in objects
AggregateErrorArrayArrayBufferAsyncFunctionAtomicsBigIntBigInt64ArrayBigUint64ArrayBooleanDataViewDatedecodeURI()decodeURIComponent()encodeURI()encodeURIComponent()Error
escape()eval()EvalErrorFinalizationRegistryFloat32ArrayFloat64ArrayFunctionGeneratorGeneratorFunctionglobalThisInfinityInt16ArrayInt32ArrayInt8ArrayInternalErrorIntlisFinite()isNaN()JSONMapMathNaNnullNumberObjectparseFloat()parseInt()PromiseProxyRangeErrorReferenceErrorReflectRegExpSetSharedArrayBufferStringSymbolSyntaxErrorTypedArrayTypeErrorUint16ArrayUint32ArrayUint8ArrayUint8ClampedArrayundefined
unescape()
uneval()URIErrorWeakMapWeakRefWeakSetWebAssembly
Expressions & operators
Addition assignment (+=)Addition (+)Assignment (=)async function expressionawaitBitwise AND assignment (&=)Bitwise AND (&)Bitwise NOT (~)Bitwise OR assignment (|=)Bitwise OR (|)Bitwise XOR assignment (^=)Bitwise XOR (^)class expressionComma operator (,)Conditional (ternary) operatorDecrement (--)delete operatorDestructuring assignmentDivision assignment (/=)Division (/)Equality (==)Exponentiation assignment (**=)Exponentiation (**)function* expressionFunction expressionGreater than or equal (>=)Greater than (>)Grouping operator ( )in operatorIncrement (++)Inequality (!=)instanceofLeft shift assignment (<<=)Left shift (<<)Less than or equal (<=)Less than (<)Logical AND assignment (&&=)Logical AND (&&)Logical NOT (!)Logical nullish assignment (??=)Logical OR assignment (||=)Logical OR (||)Multiplication assignment (*=)Multiplication (*)new.targetnew operatorNullish coalescing operator (??)Object initializerOperator precedenceOptional chaining (?.)Property accessorsRemainder assignment (%=)Remainder (%)Right shift assignment (>>=)Right shift (>>)Spread syntax (...)Strict equality (===)Strict inequality (!==)Subtraction assignment (-=)Subtraction (-)superthistypeofUnary negation (-)Unary plus (+)Unsigned right shift assignment (>>>=)Unsigned right shift (>>>)void operatoryield*yield
Statements & declarations
async functionblockbreakclassconstcontinuedebuggerdo...whileemptyexportfor await...offor...infor...offorfunction*function declarationif...elseimport.metaimportlabelletreturnswitchthrowtry...catchvarwhile
with
Functions
The arguments objectArrow function expressionsDefault parametersgetterMethod definitionsRest parameterssetter
Classes
constructorextendsPrivate class fieldsPublic class fieldsstatic
Errors
Warning: -file- is being assigned a //# sourceMappingURL, but already has oneTypeError: invalid Array.prototype.sort argumentWarning: 08/09 is not a legal ECMA-262 octal constantRangeError: radix must be an integerSyntaxError: invalid regular expression flag "x"SyntaxError: return not in functionTypeError: X.prototype.y called on incompatible typeReferenceError: can't access lexical declaration`X' before initializationTypeError: can't access property "x" of "y"TypeError: can't assign to property "x" on "y": not an objectTypeError: can't define property "x": "obj" is not extensibleTypeError: property "x" is non-configurable and can't be deletedTypeError: can't redefine non-configurable property "x"TypeError: cyclic object valueTypeError: can't access dead objectSyntaxError: applying the 'delete' operator to an unqualified name is deprecatedReferenceError: deprecated caller or arguments usageWarning: expression closures are deprecatedSyntaxError: "0"-prefixed octal literals and octal escape seq. are deprecatedSyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# insteadWarning: String.x is deprecated; use String.prototype.x insteadWarning: Date.prototype.toLocaleFormat is deprecatedSyntaxError: test for equality (==) mistyped as assignment (=)?Warning: JavaScript 1.6's for-each-in loops are deprecatedTypeError: setting getter-only property "x"SyntaxError: Unexpected '#' used outside of class bodySyntaxError: identifier starts immediately after numeric literalSyntaxError: illegal characterTypeError: cannot use 'in' operator to search for 'x' in 'y'RangeError: invalid array lengthReferenceError: invalid assignment left-hand sideTypeError: invalid assignment to const "x"RangeError: invalid dateSyntaxError: for-in loop head declarations may not have initializersSyntaxError: a declaration in the head of a for-of loop can't have an initializerTypeError: invalid 'instanceof' operand 'x'TypeError: 'x' is not iterableSyntaxError: JSON.parse: bad parsingSyntaxError: Malformed formal parameterURIError: malformed URI sequenceSyntaxError: missing ] after element listSyntaxError: missing : after property idSyntaxError: missing } after function bodySyntaxError: missing } after property listSyntaxError: missing formal parameterSyntaxError: missing = in const declarationSyntaxError: missing name after . operatorSyntaxError: missing ) after argument listSyntaxError: missing ) after conditionSyntaxError: missing ; before statementTypeError: More arguments neededRangeError: repeat count must be non-negativeTypeError: "x" is not a non-null objectTypeError: "x" has no propertiesSyntaxError: missing variable nameTypeError: can't delete non-configurable array elementRangeError: argument is not a valid code pointTypeError: "x" is not a constructorTypeError: "x" is not a functionReferenceError: "x" is not definedRangeError: precision is out of rangeError: Permission denied to access property "x"TypeError: "x" is read-onlySyntaxError: redeclaration of formal parameter "x"TypeError: Reduce of empty array with no initial valueSyntaxError: "x" is a reserved identifierRangeError: repeat count must be less than infinityWarning: unreachable code after return statementSyntaxError: "use strict" not allowed in function with non-simple parametersInternalError: too much recursionTypeError: invalid argumentsReferenceError: assignment to undeclared variable "x"ReferenceError: reference to undefined property "x"SyntaxError: Unexpected tokenTypeError: "x" is (not) "y"SyntaxError: function statement requires a nameSyntaxError: unterminated string literalTypeError: variable "x" redeclares argument
Misc
JavaScript technologies overview
Lexical grammar
JavaScript data structures
Enumerability and ownership of properties
Iteration protocols
Strict mode
Transitioning to strict mode
Template literals
Deprecated features
Web TechnologiesLearn Web DevelopmentAbout MDNFeedbackAboutMDN Web Docs StoreContact UsFirefoxMDNMDN on TwitterMDN on GithubMozillaMozilla on TwitterMozilla on Instagram© 2005-2021 Mozilla and individual contributors. Content is available under these licenses.TermsPrivacyCookies