processing data pandas geo python autumn documentation geo python autumn course information general info learning goals grading installing python vocabulary basic terms resources license terms usage lesson motivation course lesson overview lecture course environment using cloud computing environment communicating slack taste python exercise lesson lesson overview lecture introduction version control github using classroom github working assignments basic elements python writing python scripts exercise exercise hints lesson lesson overview lecture loops conditional statements exercise exercise hints lesson lesson overview lecture functions loading using modules exercise exercise hints lesson lesson overview lecture pandas exploring data using pandas processing data pandas calculating dataframes selecting data using indices filtering updating data dealing missing data sorting data rounding finding unique values writing data exercise hints exercise lesson lesson overview lecture advanced data processing pandas dealing errors debugging python scripts exercise hints exercise lesson lesson overview lecture plotting python anatomy plot plotting matplotlib connecting matplotlib plotly advanced plotting pandas exercise hints exercise geo python processing data pandas view page source processing data pandas know basics data structures pandas explore data using tools provided pandas next continue explore basic data operations regularly needed data analysis let first read data pandas clean start dataframe pd read_csv kumpula june w metadata txt sep skiprows calculating dataframes one common things pandas create new columns based calculations different variables columns creating new column dataframe easy specifying name column giving default value case decimal number dataframe diff nameerror traceback recent call last dataframe diff nameerror name dataframe defined print dataframe nameerror traceback recent call last print dataframe nameerror name dataframe defined let check datatype new column dataframe diff dtypes nameerror traceback recent call last dataframe diff dtypes nameerror name dataframe defined okey see pandas created new column recognized automatically data type float passed value also easily calculations inside dataframe let update column diff calculating difference max min columns get idea much temperatures varying different days calculations done following syntax first specify column want update e diff actual calculation using columns dataframeframe dataframe diff dataframe max dataframe min nameerror traceback recent call last dataframe diff dataframe max dataframe min nameerror name dataframe defined print dataframe nameerror traceback recent call last print dataframe nameerror name dataframe defined okey see calculations inserted diff column planned notice calculations directly without first creating column let test calculating difference minimum temperature min mean temperature day temp dataframe diff_min dataframe temp dataframe min nameerror traceback recent call last dataframe diff_min dataframe temp dataframe min nameerror name dataframe defined print dataframe nameerror traceback recent call last print dataframe nameerror name dataframe defined see created directly new column calculation similar manner calculations using many columns need using kind math algebra e g subtracttion addition multiplication division exponentiation etc example convert fahrenheit temperatures temp column celsius using formula seen already many times dataframe temp_celsius dataframe temp nameerror traceback recent call last dataframe temp_celsius dataframe temp nameerror name dataframe defined print dataframe nameerror traceback recent call last print dataframe nameerror name dataframe defined selecting data using indices one quite common procedure programming want select specific rows data possibly apply operations rows pandas different ways one common way selecting specific rows dataframe done via index slicing extract part dataframe let select first five rows assign variable called rows rows dataframe nameerror traceback recent call last rows dataframe nameerror name dataframe defined print rows nameerror traceback recent call last print rows nameerror name rows defined see slicing done similar manner normal python lists e specify index range want select inside square brackets selection dataframe start_index stop_index also select individual row specific position using loc indexing select data values row row dataframe loc nameerror traceback recent call last row dataframe loc nameerror name dataframe defined print row nameerror traceback recent call last print row nameerror name row defined attention based know python lists would expect see output following code print dataframe loc select answer poll options https geo python github io poll loc indexing returns values position pd series indices actually column names variables hence access value individual column referring index using following format work print row temp nameerror traceback recent call last print row temp nameerror name row defined print row yearmoda nameerror traceback recent call last print row yearmoda nameerror name row defined also possible select multiple rows simultaniously select temperature values temp indices temps_ dataframe loc temp nameerror traceback recent call last temps_ dataframe loc temp nameerror name dataframe defined print temps_ nameerror traceback recent call last print temps_ nameerror name temps_ defined also possible select multiple columns using indices select temp temp_celsius columns passing inside list loc start_index stop_index list_of_columns temps_ dataframe loc temp temp_celsius nameerror traceback recent call last temps_ dataframe loc temp temp_celsius nameerror name dataframe defined print temps_ nameerror traceback recent call last print temps_ nameerror name temps_ defined course also get values columns done simply referring dataframe inserting list columns inside square brackets want include temps_only dataframe temp temp_celsius nameerror traceback recent call last temps_only dataframe temp temp_celsius nameerror name dataframe defined print temps_only nameerror traceback recent call last print temps_only nameerror name temps_only defined filtering updating data one really useful feature pandas ability easily filter select rows based certain criteria using ix indexing following example shows select rows celsius temperature higher degrees variable w_temps warm temperatures w_temps dataframe ix dataframe temp_celsius nameerror traceback recent call last w_temps dataframe ix dataframe temp_celsius nameerror name dataframe defined print w_temps nameerror traceback recent call last print w_temps nameerror name w_temps defined also possible combine multiple criteria time select temperatures degrees recorded second half june e yearmoda combining multiple criteria done operator operator notice often useful separate different clauses inside parentheses w_temps dataframe ix dataframe temp_celsius dataframe yearmoda nameerror traceback recent call last w_temps dataframe ix dataframe temp_celsius dataframe yearmoda nameerror name dataframe defined print w_temps nameerror traceback recent call last print w_temps nameerror name w_temps defined subset dataframe rows temp_celsius dates yearmoda column start th june notice index values numbers left still showing positions original dataframe possible reset index using reset_index function might useful cases able slice data similar manner default reset_index would make new column called index keep track previous index might useful cases omit passing parameter drop true w_temps w_temps reset_index drop true nameerror traceback recent call last w_temps w_temps reset_index drop true nameerror name w_temps defined print w_temps nameerror traceback recent call last print w_temps nameerror name w_temps defined seen index values goes dealing missing data next update first five values temp_celsius w_temps dataframe nan number done utilizing loc indexing w_temps loc temp_celsius none nameerror traceback recent call last w_temps loc temp_celsius none nameerror name w_temps defined print w_temps nameerror traceback recent call last print w_temps nameerror name w_temps defined see missing data dataframe note notice necessary need specify starting index select data starting beginning file index hence leave empty example missing data datafile really common situation typically want deal somehow common procedures deal nan either remove dataframe fill value pandas options really easy let first see remove nodata values e clean data using dropna function inside function pass subset parameter list column nan values searched w_temps_clean w_temps dropna subset temp_celsius nameerror traceback recent call last w_temps_clean w_temps dropna subset temp_celsius nameerror name w_temps defined print w_temps_clean nameerror traceback recent call last print w_temps_clean nameerror name w_temps_clean defined see result dataframe without nodata values option fill nodata value using fillna function fill value w_temps_na_filled w_temps fillna nameerror traceback recent call last w_temps_na_filled w_temps fillna nameerror name w_temps defined print w_temps_na_filled nameerror traceback recent call last print w_temps_na_filled nameerror name w_temps_na_filled defined result dataframe nodata values filled value warning many cases filling data specific value might dangerous end modifying actual data might affect results analysis example example would dramatically changed mean celsius temperature values dramatically decreasing average temperature month hence use filling carefully sorting data quite often useful able sort data descending ascending based values column easily done pandas using sort_values yourcolumnname function let first sort values ascending order based temp column sorted_temp_a dataframe sort_values temp nameerror traceback recent call last sorted_temp_a dataframe sort_values temp nameerror name dataframe defined print sorted_temp_a nameerror traceback recent call last print sorted_temp_a nameerror name sorted_temp_a defined course also possible sort descending order ascending false parameter sorted_temp_d dataframe sort_values temp ascending false nameerror traceback recent call last sorted_temp_d dataframe sort_values temp ascending false nameerror name dataframe defined print sorted_temp_d nameerror traceback recent call last print sorted_temp_d nameerror name sorted_temp_d defined rounding finding unique values possible round values easily using round function round celsius temperatures decimals dataframe celsius_rounded dataframe temp_celsius round nameerror traceback recent call last dataframe celsius_rounded dataframe temp_celsius round nameerror name dataframe defined print dataframe nameerror traceback recent call last print dataframe nameerror name dataframe defined rounded celsius temperatures sometimes useful extract unique values column using unique_values function unique dataframe celsius_rounded unique nameerror traceback recent call last unique dataframe celsius_rounded unique nameerror name dataframe defined unique nameerror traceback recent call last unique nameerror name unique defined result get array unique values column note sometimes long list unique values necessary see unique values directly ipython hides however possible see values printing list print list unique nameerror traceback recent call last print list unique nameerror name unique defined many days unique mean temperature june check uniq_temp_days len unique nameerror traceback recent call last uniq_temp_days len unique nameerror name unique defined print uniq_temp_days days unique mean temperatures june nameerror traceback recent call last print uniq_temp_days days unique mean temperatures june nameerror name uniq_temp_days defined writing data lastly course important able write data analyzed computer really handy pandas supports many different data formats default see info typical output format far csv file function to_csv used easily save data csv format let first save data data dataframe file called kumpula_temp_results_june_ csv output_fp kumpula_temps_june_ csv dataframe to_csv output_fp sep nameerror traceback recent call last dataframe to_csv output_fp sep nameerror name dataframe defined nice data dataframe saved file see first value datafile contains index value rows also quite many decimals present new columns created let deal save temperature values w_temps dataframe without index decimal floating point numbers output_fp kumpula_temps_above _june_ csv dataframe to_csv output_fp sep index false float_format f nameerror traceback recent call last dataframe to_csv output_fp sep index false float_format f nameerror name dataframe defined omitting index index false parameter specifying many decimals written done float_fomat parameter text f defines pandas use decimals columns writing data file changing value would write decimals etc results cleaner output file without index column decimal floating point numbers hint quite common people especially non programmers want deliver data ms excel format saving dataframe excel also straightforward pandas first need initialize specific excelwriter object specify filename spreadsheet name want save dataframe optionally also omit index specify float formatting earlier examples excel_output_fp kumpula_temps_june_ xlsx writer pd excelwriter excel_output_fp modulenotfounderror traceback recent call last writer pd excelwriter excel_output_fp virtualenv python lib python site packages pandas io excel _openpyxl py __init__ self path engine mode engine_kwargs def __init__ self path engine none mode w engine_kwargs use openpyxl module excel writer openpyxl workbook import workbook super __init__ path mode mode engine_kwargs modulenotfounderror module named openpyxl dataframe to_excel writer sheet_name kumpula_temperatures index false float_format f nameerror traceback recent call last dataframe to_excel writer sheet_name kumpula_temperatures index false float_format f nameerror name dataframe defined result dataframe excel format next previous copyright tenkanen whipp university helsinki built sphinx using theme provided read docs versions v tags branches master