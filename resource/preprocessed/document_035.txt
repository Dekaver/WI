kesalahan errors dan pengecualian exceptions dokumentasi python navigasi index modul berikut sebelum python documentation tutorial python kesalahan errors dan pengecualian exceptions sampai sekarang pesan kesalahan belum lebih dari yang disebutkan tetapi jika anda telah mencoba contohnya anda mungkin telah melihat beberapa ada setidaknya dua jenis kesalahan yang dapat dibedakan syntax errors dan exceptions kesalahan sintaksis kesalahan sintaksis juga dikenal sebagai kesalahan penguraian parsing mungkin merupakan jenis keluhan paling umum yang anda dapatkan saat anda masih belajar python true print hello world file line true print hello world syntaxerror invalid syntax pengurai parser mengulangi baris yang menyinggung dan menampilkan sedikit arrow yang menunjuk pada titik paling awal di baris di mana kesalahan terdeteksi kesalahan disebabkan oleh atau setidaknya terdeteksi pada token preceding panah dalam contoh kesalahan terdeteksi pada fungsi print karena titik dua hilang sebelum itu nama file dan nomor baris dicetak sehingga anda tahu ke mana harus mencari kalau kalau masukan berasal dari skrip pengecualian bahkan jika suatu pernyataan atau ungkapan secara sintaksis benar itu dapat menyebabkan kesalahan ketika suatu usaha dilakukan untuk mengeksekusinya kesalahan yang terdeteksi selama eksekusi disebut exceptions dan tidak fatal tanpa syarat anda akan segera belajar cara menanganinya dalam program python namun sebagian besar pengecualian tidak ditangani oleh program dan menghasilkan pesan kesalahan seperti yang ditunjukkan di sini traceback recent call last file line zerodivisionerror division zero spam traceback recent call last file line nameerror name spam defined traceback recent call last file line typeerror convert int object str implicitly baris terakhir dari pesan kesalahan menunjukkan apa yang terjadi pengecualian ada berbagai jenis yang berbeda dan tipe dicetak sebagai bagian dari pesan tipe dalam contoh adalah zerodivisionerror nameerror dan typeerror string yang dicetak sebagai jenis pengecualian adalah nama pengecualian bawaan yang terjadi ini berlaku untuk semua pengecualian bawaan tetapi tidak harus sama untuk pengecualian yang dibuat pengguna meskipun ini adalah konvensi yang bermanfaat nama pengecualian standar adalah pengidentifikasi bawaan bukan kata kunci yang dipesan reserved keyword sisa baris menyediakan detail berdasarkan jenis pengecualian dan apa yang menyebabkannya bagian sebelumnya dari pesan kesalahan menunjukkan konteks di mana pengecualian terjadi dalam bentuk stack traceback secara umum berisi daftar baris sumber stack traceback namun ini tidak akan menampilkan baris yang dibaca dari masukan standar built exceptions memberikan daftar pengecualian bawaan dan artinya menangani pengecualian dimungkinkan untuk menulis program yang menangani pengecualian yang dipilih lihatlah contoh berikut yang meminta masukan dari pengguna sampai integer yang valid telah dimasukkan tetapi memungkinkan pengguna untuk menghentikan program menggunakan control c atau apa pun yang didukung sistem operasi perhatikan bahwa gangguan yang dibuat pengguna ditandai dengan munculnya pengecualian keyboardinterrupt true try x int input please enter number break except valueerror print oops valid number try pernyataan try berfungsi sebagai berikut pertama try clause pernyataan pernyataan di antara kata kunci try dan except dieksekusi jika tidak ada pengecualian terjadi except clause dilewati dan eksekusi pernyataan keyword try selesai jika pengecualian terjadi selama eksekusi klausa try sisa klausa dilewati kemudian jika jenisnya cocok dengan pengecualian yang dinamai dengan kata kunci exception klausa except dioperasikan dan kemudian eksekusi berlanjut setelah pernyataan try jika terjadi pengecualian yang tidak cocok dengan pengecualian yang disebutkan dalam klausa kecuali itu diteruskan ke luar pernyataan try jika tidak ada penangan yang ditemukan ini adalah unhandled exception dan eksekusi berhenti dengan pesan seperti yang ditunjukkan di atas pernyataan try mungkin memiliki lebih dari satu klausa except untuk menentukan penangan dari berbagai pengecualian paling banyak satu penangan akan dieksekusi penangan hanya menangani pengecualian yang terjadi pada klausa try yang sesuai bukan pada penangan lain yang sama pernyataan try klausa except dapat menyebutkan beberapa pengecualian sebagai tanda kurung tuple misalnya except runtimeerror typeerror nameerror pass kelas dalam klausa except kompatibel dengan pengecualian jika itu adalah kelas yang sama atau kelas basisnya tapi bukan sebaliknya sebuah klausa except dari daftar kelas turunan tidak kompatibel dengan kelas misalnya kode berikut akan mencetak b c dalam urutan itu class b exception pass class c b pass class c pass cls b c try raise cls except print except c print c except b print b perhatikan bahwa jika klausa except dibalik dengan except b dahulu itu akan dicetak b b b pencocokan pertama klausa except dipicu klausa except terakhir dapat menghilangkan nama nama pengecualian untuk berfungsi sebagai wildcard gunakan ini dengan sangat hati hati karena mudah untuk menutupi kesalahan nyata pemrograman dengan cara ini ini juga dapat digunakan untuk mencetak pesan kesalahan dan kemudian menimbulkan kembali pengecualian memungkinkan pemanggil untuk menangani pengecualian juga import sys try f open myfile txt f readline int strip except oserror err print os error format err except valueerror print could convert data integer except print unexpected error sys exc_info raise pernyataan try keywird except memiliki opsi else clause yang jika ada harus mengikuti semua klausa except ini berguna untuk kode yang harus dijalankan jika klausa try tidak menimbulkan pengecualian sebagai contoh arg sys argv try f open arg r except oserror print cannot open arg else print arg len f readlines lines f close penggunaan klausa else lebih baik daripada menambahkan kode tambahan ke klausa try karena menghindari secara tidak sengaja menangkap pengecualian yang tidak dimunculkan oleh kode yang dilindungi oleh pernyataan try keyword except ketika pengecualian terjadi itu mungkin memiliki nilai terkait juga dikenal sebagai argument pengecualian kehadiran dan jenis argumen tergantung pada jenis pengecualian klausa except dapat menentukan variabel setelah nama pengecualian variabel terikat pada instance pengecualian dengan argumen yang disimpan dalam instance args untuk kenyamanan instance pengecualian mendefinisikan __str__ sehingga argumen dapat dicetak langsung tanpa harus merujuk args seseorang juga dapat membuat instansiasi pengecualian terlebih dahulu sebelum menimbulkannya dan menambahkan atribut apa pun yang diinginkan try raise exception spam eggs except exception inst print type inst exception instance print inst args arguments stored args print inst __str__ allows args printed directly may overridden exception subclasses x inst args unpack args print x x print spam eggs spam eggs x spam eggs jika pengecualian memiliki argumen mereka dicetak sebagai bagian terakhir detail dari pesan untuk pengecualian yang tidak ditangani penangan pengecualian tidak hanya menangani pengecualian jika mereka muncul segera di klausa try tetapi juga jika mereka terjadi di dalam fungsi yang disebut bahkan secara tidak langsung di klausa try sebagai contoh def this_fails x try this_fails except zerodivisionerror err print handling run time error err handling run time error division zero memunculkan pengecualian pernyataan raise memungkinkan programmer untuk memaksa pengecualian yang ditentukan terjadi sebagai contoh raise nameerror hithere traceback recent call last file line nameerror hithere satu satunya argumen untuk raise menunjukkan pengecualian yang dimunculkan ini harus berupa instance pengecualian atau kelas pengecualian kelas yang berasal dari exception jika kelas pengecualian dikirimkan itu akan secara implisit diinstansiasi dengan memanggil pembangunnya constructor tanpa argumen raise valueerror shorthand raise valueerror jika anda perlu menentukan apakah pengecualian muncul tetapi tidak bermaksud menanganinya bentuk yang lebih sederhana dari pernyataan raise memungkinkan anda untuk memunculkan kembali pengecualian try raise nameerror hithere except nameerror print exception flew raise exception flew traceback recent call last file line nameerror hithere pengecualian yang ditentukan pengguna program dapat memberi nama pengecualian mereka sendiri dengan membuat kelas pengecualian baru lihat tut class untuk informasi lebih lanjut tentang kelas python pengecualian biasanya berasal dari kelas exception baik secara langsung atau tidak langsung kelas pengecualian dapat didefinisikan yang melakukan apa saja yang dapat dilakukan oleh kelas lain tetapi biasanya tetap sederhana seringkali hanya menawarkan sejumlah atribut yang memungkinkan informasi tentang kesalahan diekstraksi oleh penangan sebagai pengecualian saat membuat modul yang dapat menimbulkan beberapa kesalahan berbeda praktik yang umum adalah membuat kelas dasar untuk pengecualian yang ditentukan oleh modul itu dan mensubkelaskan kelas itu untuk membuat kelas pengecualian khusus untuk kondisi kesalahan yang berbeda class error exception base class exceptions module pass class inputerror error exception raised errors input attributes expression input expression error occurred message explanation error def __init__ self expression message self expression expression self message message class transitionerror error raised operation attempts state transition allowed attributes previous state beginning transition next attempted new state message explanation specific transition allowed def __init__ self previous next message self previous previous self next next self message message sebagian besar pengecualian didefinisikan dengan nama yang diakhiri dengan error mirip dengan penamaan pengecualian standar banyak modul standar menentukan pengecualian mereka sendiri untuk melaporkan kesalahan yang mungkin terjadi pada fungsi yang mereka tetapkan informasi lebih lanjut tentang kelas disajikan dalam bab tut class mendefinisikan tindakan pembersihan pernyataan try memiliki klausa opsional lain yang dimaksudkan untuk menentukan tindakan pembersihan yang harus dijalankan dalam semua keadaan sebagai contoh try raise keyboardinterrupt finally print goodbye world goodbye world keyboardinterrupt traceback recent call last file line finally clause present finally clause execute last task try statement completes finally clause runs whether try statement produces exception following points discuss complex cases exception occurs exception occurs execution try clause exception may handled except clause exception handled except clause exception raised finally clause executed pengecualian dapat terjadi selama pelaksanaan klausa except atau else sekali lagi pengecualian akan muncul kembali setelah klausa finally telah dieksekusi try statement reaches break continue return statement finally clause execute prior break continue return statement execution finally clause includes return statement returned value one finally clause return statement value try clause return statement sebagai contoh def bool_return try return true finally return false bool_return false contoh yang lebih rumit def divide x try result x except zerodivisionerror print division zero else print result result finally print executing finally clause divide result executing finally clause divide division zero executing finally clause divide executing finally clause traceback recent call last file line file line divide typeerror unsupported operand type str str seperti yang anda lihat klausa finally dieksekusi dalam peristiwa apa pun typeerror yang ditimbulkan dengan membagi dua string tidak ditangani oleh klausa except dan karenanya kembali muncul setelah klausa finally telah dieksekusi dalam aplikasi dunia nyata klausa finally berguna untuk melepaskan sumber daya eksternal seperti berkas atau koneksi jaringan terlepas dari apakah penggunaan sumber daya tersebut berhasil tindakan pembersihan yang sudah ditentukan beberapa objek mendefinisikan tindakan pembersihan standar yang harus dilakukan ketika objek tidak lagi diperlukan terlepas dari apakah operasi menggunakan objek berhasil atau gagal lihatlah contoh berikut yang mencoba membuka berkas dan mencetak isinya ke layar line open myfile txt print line end masalah dengan kode ini adalah bahwa ia membiarkan berkas terbuka untuk jumlah waktu yang tidak ditentukan setelah bagian kode ini selesai dieksekusi ini bukan masalah dalam skrip sederhana tetapi bisa menjadi masalah untuk aplikasi yang lebih besar pernyataan memungkinkan objek seperti berkas digunakan dengan cara yang memastikan mereka selalu dibersihkan secepatnya dan dengan benar open myfile txt f line f print line end setelah pernyataan dieksekusi file f selalu ditutup bahkan jika ada masalah saat pemrosesan baris baris objek yang seperti berkas berkas memberikan tindakan pembersihan yang telah ditentukan akan menunjukkan ini dalam dokumentasinya daftar isi kesalahan errors dan pengecualian exceptions kesalahan sintaksis pengecualian menangani pengecualian memunculkan pengecualian pengecualian yang ditentukan pengguna mendefinisikan tindakan pembersihan tindakan pembersihan yang sudah ditentukan topik sebelumnya masukan dan keluaran topik berikutnya classes halaman ini laporkan bug lihat sumber navigasi index modul berikut sebelum python documentation tutorial python hak cipta python software foundation python software foundation non profit corporation please donate terakhir diperbarui pada mei found bug created using sphinx