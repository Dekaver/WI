computational tools pandas documentation pandas documentation previous next modules modules index table contents new installation frequently asked questions faq package overview intro data structures essential basic functionality indexing selecting data computational tools statistical functions covariance correlation data ranking moving rolling statistics moments binary rolling moments computing rolling pairwise correlations exponentially weighted moment functions linear panel regression standard ols regression panel regression result fields tests working missing data group split apply combine merge join concatenate reshaping pivot tables time series date functionality plotting matplotlib io tools text csv hdf sparse data structures caveats gotchas rpy r interface related python libraries comparison r r libraries api reference search enter search terms module class function name computational tools statistical functions covariance series object method cov compute covariance series excluding na null values series randn series randn cov analogously dataframe method cov compute pairwise covariances among series dataframe also excluding na null values frame dataframe randn columns b c e frame cov b c e b c e correlation several methods computing correlations provided several kinds correlation methods provided method name description pearson default standard correlation coefficient kendall kendall tau correlation coefficient spearman spearman rank correlation coefficient currently computed using pairwise complete observations frame dataframe randn columns b c e frame ix np nan series series frame corr frame b frame corr frame b method spearman pairwise correlation dataframe columns frame corr b c e b c e note non numeric columns automatically excluded correlation calculation related method corrwith implemented dataframe compute correlation like labeled series contained different dataframe objects index b c e columns one two three four df dataframe randn index index columns columns df dataframe randn index index columns columns df corrwith df one two three four df corrwith df axis b c e nan data ranking rank method produces data ranking ties assigned mean ranks default group series np random randn index list abcde b tie rank b c e rank also dataframe method rank either rows axis columns axis nan values excluded ranking df dataframe np random randn df df ties df nan nan nan nan nan df rank nan nan nan nan nan rank optionally takes parameter ascending default true false data reverse ranked larger values assigned smaller rank rank supports different tie breaking methods specified method parameter average average rank tied group min lowest rank group max highest rank group first ranks assigned order appear array note methods significantly faster around x scipy stats rankdata moving rolling statistics moments working time series data number functions provided computing common moving rolling statistics among count sum mean median correlation variance covariance standard deviation skewness kurtosis methods pandas namespace otherwise found pandas stats moments function description rolling_count number non null observations rolling_sum sum values rolling_mean mean values rolling_median arithmetic median values rolling_min minimum rolling_max maximum rolling_std unbiased standard deviation rolling_var unbiased variance rolling_skew unbiased skewness rd moment rolling_kurt unbiased kurtosis th moment rolling_quantile sample quantile value rolling_apply generic apply rolling_cov unbiased covariance binary rolling_corr correlation binary rolling_corr_pairwise pairwise correlation dataframe columns generally methods interface binary operators e g rolling_corr take two series dataframes otherwise accept following arguments window size moving window min_periods threshold non null data points require otherwise result na time_rule optionally specify time rule pre conform data functions applied ndarrays series objects ts series randn index daterange periods ts ts cumsum ts plot style k rolling_mean ts plot style k also applied dataframe objects really syntactic sugar applying moving window operator dataframe columns df dataframe randn index ts index columns b c df df cumsum rolling_sum df plot subplots true array axes x axes x axes x axes x dtype object binary rolling moments rolling_cov rolling_corr compute moving window statistics two series combination dataframe series dataframe dataframe behavior case two series compute statistic pairing dataframe series compute statistics column dataframe passed series thus returning dataframe dataframe dataframe compute statistic matching column names returning dataframe example df df rolling_corr df df b window b c nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan computing rolling pairwise correlations financial data analysis fields common compute correlation matrices collection time series difficult compute moving window correlation matrix done using rolling_corr_pairwise function yields panel whose items dates question correls rolling_corr_pairwise df correls df index b c b c efficiently retrieve time series correlations two columns using ix indexing correls ix c plot exponentially weighted moment functions related set functions exponentially weighted versions many statistics number ew exponentially weighted functions provided using blending method example result input compute exponentially weighted moving average one must rather pass directly easier think either span center mass com ew moment pass one functions span corresponds commonly called day ew moving average example center mass physical interpretation example span corresponds com list functions available function description ewma ew moving average ewvar ew moving variance ewstd ew moving standard deviation ewmcorr ew moving correlation ewmcov ew moving covariance example univariate time series plt close ts plot style k ewma ts span plot style k note ew functions perform standard adjustment initial observations whereby fewer observations called span observations reweighted accordingly linear panel regression note plan move functionality statsmodels next release result attributes may change names order foster naming consistency rest statsmodels provide every effort provide compatibility older versions pandas however implemented fast set moving window linear regression classes pandas two different types regressions supported standard ordinary least squares ols multiple regression multiple regression ols based panel data including fixed effects also known entity individual effects time effects kinds linear models accessed ols function pandas namespace take following arguments specify either static full sample dynamic moving window regression window_type full sample default expanding rolling window size moving window window_type rolling case window specified window_type automatically set rolling min_periods minimum number time periods require compute regression coefficients generally speaking ols works given response object x predictors object take many forms series ndarray dataframe panel model x series dataframe dict series dict dataframe panel based types x model inferred either panel model regular linear model variable dataframe result panel model case x variable must either panel dict dataframe coerced panel standard ols regression let pull sample data pandas io data import datareader symbols msft goog aapl data dict sym datareader sym yahoo sym symbols ioerror traceback recent call last data dict sym datareader sym yahoo sym symbols sym data dict sym datareader sym yahoo sym symbols users changshe code pandas pandas io data py datareader name data_source start end data_source yahoo return get_data_yahoo name name start start end end elif data_source fred return get_data_fred name name start start end end users changshe code pandas pandas io data py get_data_yahoo name start end ignore csv lines urllib urlopen url read return read_csv stringio lines index_col parse_dates true library frameworks epd framework versions lib python urllib pyc urlopen url data proxies opener _urlopener data none return opener open url else return opener open url data library frameworks epd framework versions lib python urllib pyc open self fullurl data try data none return getattr self name url else return getattr self name url data library frameworks epd framework versions lib python urllib pyc open_http self url data realhost h putheader host realhost args self addheaders h putheader args h endheaders data errcode errmsg headers h getreply fp h getfile library frameworks epd framework versions lib python httplib pyc endheaders self message_body else raise cannotsendheader self _send_output message_body def request self method url body none headers library frameworks epd framework versions lib python httplib pyc _send_output self message_body msg message_body message_body none self send msg message_body none message_body string e file library frameworks epd framework versions lib python httplib pyc send self data self sock none self auto_open self connect else raise notconnected library frameworks epd framework versions lib python httplib pyc connect self connect host port specified __init__ self sock socket create_connection self host self port self timeout self source_address self _tunnel_host library frameworks epd framework versions lib python socket pyc create_connection address timeout source_address host port address err none res getaddrinfo host port sock_stream af socktype proto canonname sa res sock none ioerror errno socket error errno nodename servname provided known panel panel data swapaxes items minor nameerror traceback recent call last panel panel data swapaxes items minor nameerror name data defined close_px panel close nameerror traceback recent call last close_px panel close nameerror name panel defined convert closing prices returns rets close_px close_px shift nameerror traceback recent call last rets close_px close_px shift nameerror name close_px defined rets info nameerror traceback recent call last rets info nameerror name rets defined let static regression aapl returns goog returns model ols rets aapl x rets ix goog nameerror traceback recent call last model ols rets aapl x rets ix goog nameerror name rets defined model nameerror traceback recent call last model nameerror name model defined model beta nameerror traceback recent call last model beta nameerror name model defined passed series instead dataframe single goog column model would assigned generic name x sole right hand side variable moving window regression see relationship changes time model ols rets aapl x rets ix goog window nameerror traceback recent call last model ols rets aapl x rets ix goog window nameerror name rets defined plot coefficient goog model beta goog plot nameerror traceback recent call last model beta goog plot nameerror name model defined looks like outliers rolling window regression influencing results could perform simple winsorization std level trim impact outliers winz rets copy nameerror traceback recent call last winz rets copy nameerror name rets defined std_ year rolling_std rets min_periods nameerror traceback recent call last std_ year rolling_std rets min_periods nameerror name rets defined cap year standard deviation cap_level np sign winz std_ year nameerror traceback recent call last cap_level np sign winz std_ year nameerror name winz defined winz np abs winz std_ year cap_level nameerror traceback recent call last winz np abs winz std_ year cap_level nameerror name cap_level defined winz_model ols winz aapl x winz ix goog window nameerror traceback recent call last winz_model ols winz aapl x winz ix goog window nameerror name winz defined model beta goog plot label outliers nameerror traceback recent call last model beta goog plot label outliers nameerror name model defined winz_model beta goog plot label winsorized plt legend loc best nameerror traceback recent call last winz_model beta goog plot label winsorized plt legend loc best nameerror name winz_model defined simple example see impact winsorization actually quite significant note correlation winsorization remains high winz corrwith rets nameerror traceback recent call last winz corrwith rets nameerror name winz defined multiple regressions run passing dataframe multiple columns predictors x ols winz aapl x winz drop aapl axis nameerror traceback recent call last ols winz aapl x winz drop aapl axis nameerror name winz defined panel regression implemented moving window panel regression potentially unbalanced panel data see article means nothing suppose wanted model relationship magnitude daily return trading volume among group stocks want pool data together run one big regression actually quite easy make units somewhat comparable volume panel volume e nameerror traceback recent call last volume panel volume e nameerror name panel defined model ols volume x return np abs rets nameerror traceback recent call last model ols volume x return np abs rets nameerror name volume defined model nameerror traceback recent call last model nameerror name model defined panel model insert dummy variables entities involved stocks account entity specific effect intercept fe_model ols volume x return np abs rets entity_effects true nameerror traceback recent call last fe_model ols volume x return np abs rets entity_effects true nameerror name volume defined fe_model nameerror traceback recent call last fe_model nameerror name fe_model defined ran regression intercept one dummy variables must dropped design matrix full rank use intercept dummy variables included fe_model ols volume x return np abs rets entity_effects true intercept false nameerror traceback recent call last fe_model ols volume x return np abs rets entity_effects true intercept false nameerror name volume defined fe_model nameerror traceback recent call last fe_model nameerror name fe_model defined also include time effects demeans data cross sectionally point time equivalent including dummy variables date mathematical care must taken properly compute standard errors case te_model ols volume x return np abs rets time_effects true entity_effects true nameerror traceback recent call last te_model ols volume x return np abs rets time_effects true entity_effects true nameerror name volume defined te_model nameerror traceback recent call last te_model nameerror name te_model defined intercept mean term dropped default according model assumptions subtracted group means result fields tests leave user explore docstrings source especially moving code statsmodels near future previous next modules modules index show source copyright pandas development team created using sphinx