Java Exceptions (Try...Catch)
Tutorials
References
Exercises
Menu
Log in
Paid Courses
HTML
CSS
JAVASCRIPT
SQL
PYTHON
PHP
BOOTSTRAP
HOW TO
W3.CSS
JAVA
JQUERY
C++
C#
R



×
Tutorials
HTML and CSS
Learn HTML
Learn CSS
Learn Bootstrap
Learn W3.CSS
Learn Colors
Learn Icons
Learn Graphics
Learn SVG
Learn Canvas
Learn How To
Learn Sass
Artificial Intelligence
Learn AI
Learn Machine Learning
Learn Data Science
Learn NumPy
Learn Pandas
Learn SciPy
Learn Statistics
XML Tutorials
Learn XML
Learn XML AJAX
Learn XML DOM
Learn XML DTD
Learn XML Schema
Learn XSLT
Learn XPath
Learn XQuery
JavaScript
Learn JavaScript
Learn jQuery
Learn React
Learn AngularJS
Learn JSON
Learn AJAX
Learn AppML
Learn W3.JS
Programming
Learn Python
Learn Java
Learn C++
Learn C#
Learn R
Learn Kotlin
Server Side
Learn SQL
Learn MySQL
Learn PHP
Learn ASP
Learn Node.js
Learn Raspberry Pi
Learn Git
Web Building
Web Templates
Web Statistics
Web Certificates
Web Editor
Web Development
Test Your Typing Speed
Play a Code Game
Cyber Security
Accessibility
Artificial Intelligence
Learn AI
Learn Machine Learning
Learn Data Science
Learn NumPy
Learn Pandas
Learn SciPy
Learn Statistics
XML Tutorials
Learn XML
Learn XML AJAX
Learn XML DOM
Learn XML DTD
Learn XML Schema
Learn XSLT
Learn XPath
Learn XQuery
×
References
HTML
HTML Tag Reference
HTML Browser Support
HTML Event Reference
HTML Color Reference
HTML Attribute Reference
HTML Canvas Reference
HTML SVG Reference
Google Maps Reference
CSS
CSS Reference
CSS Browser Support
CSS Selector Reference
Bootstrap 3 Reference
Bootstrap 4 Reference
W3.CSS Reference
Icon Reference
Sass Reference
JavaScript
JavaScript Reference
HTML DOM Reference
jQuery Reference
AngularJS Reference
AppML Reference
W3.JS Reference
Programming
Python Reference
Java Reference
Server Side
SQL Reference
MySQL Reference
PHP Reference
ASP Reference
XML
XML DOM Reference
XML Http Reference
XSLT Reference
XML Schema Reference
Character Sets
HTML Character Sets
HTML ASCII
HTML ANSI
HTML Windows-1252
HTML ISO-8859-1
HTML Symbols
HTML UTF-8
×
Exercises
Exercises
HTML Exercises
CSS Exercises
JavaScript Exercises
SQL Exercises
MySQL Exercises
PHP Exercises
Python Exercises
NumPy Exercises
Pandas Exercises
SciPy Exercises
jQuery Exercises
Java Exercises
Bootstrap Exercises
Bootstrap 4 Exercises
C++ Exercises
C# Exercises
R Exercises
Git Exercises
Quizzes
HTML Quiz
CSS Quiz
JavaScript Quiz
SQL Quiz
MySQL Quiz
PHP Quiz
Python Quiz
NumPy Quiz
Pandas Quiz
SciPy Quiz
jQuery Quiz
Java Quiz
Bootstrap Quiz
Bootstrap 4 Quiz
C++ Quiz
C# Quiz
R Quiz
XML Quiz
Cyber Security Quiz
Accessibility Quiz
Courses
HTML Course
CSS Course
JavaScript Course
Front End Course
SQL Course
Python Course
NumPy Course
Pandas Course
jQuery Course
PHP Course
C# Course
C++ Course
XML Course
R Course
Cyber Security Course
Accessibility Course
×
Tutorials
References
Exercises
Paid Courses
Shop
Java Tutorial
Java HOME
Java Intro
Java Get Started
Java Syntax
Java Comments
Java Variables
Java Data Types
Java Type Casting
Java Operators
Java Strings
Java Math
Java Booleans
Java If...Else
Java Switch
Java While Loop
Java For Loop
Java Break/Continue
Java Arrays
Java Methods
Java Methods
Java Method Parameters
Java Method Overloading
Java Scope
Java Recursion
Java Classes
Java OOP
Java Classes/Objects
Java Class Attributes
Java Class Methods
Java Constructors
Java Modifiers
Java Encapsulation
Java Packages / API
Java Inheritance
Java Polymorphism
Java Inner Classes
Java Abstraction
Java Interface
Java Enums
Java User Input
Java Date
Java ArrayList
Java LinkedList
Java HashMap
Java HashSet
Java Iterator
Java Wrapper Classes
Java Exceptions
Java RegEx
Java Threads
Java Lambda
Java File Handling
Java Files
Java Create/Write Files
Java Read Files
Java Delete Files
Java How To
Add Two Numbers
Java Reference
Java Keywords
abstract
boolean
break
byte
case
catch
char
class
continue
default
do
double
else
enum
extends
final
finally
float
for
if
implements
import
instanceof
int
interface
long
new
package
private
protected
public
return
short
static
super
switch
this
throw
throws
try
void
while
Java String Methods
Java Math Methods
Java Examples
Java Examples
Java Compiler
Java Exercises
Java Quiz
Java Certificate
Java Exceptions - Try...Catch
❮ Previous
Next ❯
Java Exceptions
When executing Java code, different errors can occur: coding errors made by the programmer, errors due to wrong input,
or other unforeseeable things.
When an error occurs, Java will normally stop and generate an error message. The technical term for this is: Java will throw an exception (throw an error).
Java try and catch
The try statement allows you to define a block of code to be
tested for errors while it is being executed.
The catch statement allows you to define a block of code to
be executed, if an error occurs in the try block.
The try and catch keywords
come in pairs:
Syntax
try {
//  Block of code to try
}
catch(Exception e) {
//  Block of code to handle errors
}
Consider the following example:
This will generate an error, because myNumbers[10] does not exist.
public class Main {
public static void main(String[ ] args) {
int[] myNumbers = {1, 2, 3};
System.out.println(myNumbers[10]); // error!
}
}
The output will be something like this:
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 10
at Main.main(Main.java:4)
Try it Yourself »
If an error occurs, we can use try...catch to catch the error and execute some code to handle it:
Example
public class Main {
public static void main(String[ ] args) {
try {
int[] myNumbers = {1, 2, 3};
System.out.println(myNumbers[10]);
} catch (Exception e) {
System.out.println("Something went wrong.");
}
}
}
The output will be:
Something went wrong.
Try it Yourself »
Finally
The finally statement lets you execute code, after try...catch, regardless of the result:
Example
public class Main {
public static void main(String[] args) {
try {
int[] myNumbers = {1, 2, 3};
System.out.println(myNumbers[10]);
} catch (Exception e) {
System.out.println("Something went wrong.");
} finally {
System.out.println("The 'try catch' is finished.");
}
}
}
The output will be:
Something went wrong.
The 'try catch' is finished.
Try it Yourself »
The throw keyword
The throw statement allows you to create a custom error.
The throw statement is used together with an exception type. There are many exception types available in Java: ArithmeticException,
FileNotFoundException, ArrayIndexOutOfBoundsException, SecurityException, etc:
Example
Throw an exception if age is below 18 (print "Access
denied"). If age is 18 or older, print "Access granted":
public class Main {
static void checkAge(int age) {
if (age < 18) {
throw new ArithmeticException("Access denied - You must be at least 18 years old.");
}
else {
System.out.println("Access granted - You are old enough!");
}
}
public static void main(String[] args) {
checkAge(15); // Set age to 15 (which is below 18...)
}
}
The output will be:
Exception in thread "main" java.lang.ArithmeticException: Access denied - You must be at least 18 years old.
at Main.checkAge(Main.java:4)
at Main.main(Main.java:12)
Try it Yourself »
If age was 20, you would not get an exception:
Example
checkAge(20);
The output will be:
Access granted - You are old enough!
Try it Yourself »
Test Yourself With Exercises
Exercise:
Insert the missing parts to handle the error in the code below.
{
int[] myNumbers = {1, 2, 3};
System.out.println(myNumbers[10]);
}
(Exception e) {
System.out.println("Something went wrong.");
}
Submit Answer »
Start the Exercise
❮ Previous
Next ❯
COLOR PICKER
LIKE US
Get certifiedby completinga course today!
w3schools CERTIFIED
.
2021
Get started
CODE GAME
Play Game
Certificates
HTML
CSS
JavaScript
Front End
Python
SQL
And more
REPORT ERROR
FORUM
ABOUT
SHOP
×
Report Error
If you want to report an error, or if you want to make a suggestion, do not hesitate to send us an e-mail:
help@w3schools.com
×
Thank You For Helping Us!
Your message has been sent to W3Schools.
Top Tutorials
HTML Tutorial
CSS Tutorial
JavaScript Tutorial
How To Tutorial
SQL Tutorial
Python Tutorial
W3.CSS Tutorial
Bootstrap Tutorial
PHP Tutorial
Java Tutorial
C++ Tutorial
jQuery Tutorial
Top References
HTML Reference
CSS Reference
JavaScript Reference
SQL Reference
Python Reference
W3.CSS Reference
Bootstrap Reference
PHP Reference
HTML Colors
Java Reference
Angular Reference
jQuery Reference
Top Examples
HTML Examples
CSS Examples
JavaScript Examples
How To Examples
SQL Examples
Python Examples
W3.CSS Examples
Bootstrap Examples
PHP Examples
Java Examples
XML Examples
jQuery Examples
Web Courses
HTML Course
CSS Course
JavaScript Course
Front End Course
SQL Course
Python Course
PHP Course
jQuery Course
Java Course
C++ Course
C# Course
XML Course
Get Certified »
W3Schools is optimized for learning and training. Examples might be simplified to improve reading and learning.
Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content.
While using W3Schools, you agree to have read and accepted our terms of use,
cookie and privacy policy.
Copyright 1999-2021 by Refsnes Data. All Rights Reserved.
W3Schools is Powered by W3.CSS.